services:
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: aipharm-database
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YOURPASSWORD
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - aipharm-network
    healthcheck:
      test: ["CMD-SHELL", "grep -q 'SQL Server is now ready for client connections' /var/opt/mssql/log/errorlog"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 25s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: aipharm-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=AIPharm;User Id=sa;Password=YOURPASSWORD;TrustServerCertificate=true;MultipleActiveResultSets=true
      - Jwt__Key=AIPharm-Super-Secret-Key-For-JWT-Tokens-2024-Very-Long-Key-Docker
      - Jwt__Issuer=AIPharm
      - Jwt__Audience=AIPharm-Users
      
    ports:
      - "8081:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - aipharm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: aipharm-frontend
    environment:
      # Inside Docker, talk to backend by container name
      - VITE_API_BASE_URL=http://aipharm-backend:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - aipharm-network
    restart: unless-stopped
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./package.json:/app/package.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./tailwind.config.js:/app/tailwind.config.js

networks:
  aipharm-network:
    driver: bridge

volumes:
  sqlserver_data:
